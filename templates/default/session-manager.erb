#!/usr/bin/env ruby

require 'pg'
require 'pusher-client'


# We need to override the pusher client for at least version 0.6.0
# as it doesnt catch errors in connections and as such enters into
# and endless loop that continually writes to the log file and
# ultimately takes down the system. Here is the overridden connect
# statement (based ob 0.6.0) that handles an error and disconnects.
module PusherClient

  class Socket
    
    def connect(async = false)
      return if @connection
      logger.debug("Pusher : connecting : #{@url}")

      if async
        @connection_thread = Thread.new do
          begin
            connect_internal
          rescue => ex
            send_local_event "pusher:error", ex
          end
        end
      else
        begin
          connect_internal
        rescue => ex
          send_local_event "pusher:error", ex
          disconnect
        end
      end
      self
    end
    
  end
end

conn = PG::Connection.new('<%= node['cookbook_clarus']['database']['host'] %>', 5432, nil, nil, '<%= node['cookbook_clarus']['database']['name'] %>', 'postgres', '<%= node['cookbook_clarus']['db_root_password'] %>')

options = {:secret => '<%= node['cookbook_clarus']['pusher']['secret'] %>'}
socket = PusherClient::Socket.new('<%= node['cookbook_clarus']['pusher']['key'] %>', options)

socket.subscribe('presence-channel', 0)

socket['presence-channel'].bind('pusher_internal:member_removed') do |data|
  user_id, account_id = JSON.parse(data)['user_id'].split('-')
  conn.exec_params("DELETE FROM online_users WHERE user_id = #{user_id} AND account_id = #{account_id}")
end

socket['presence-channel'].bind('pusher_internal:member_added') do |data|
  user_id, account_id = JSON.parse(data)['user_id'].split('-')
  conn.exec_params("INSERT INTO online_users(user_id, account_id, created_at, updated_at) VALUES(#{user_id}, #{account_id}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)")
end

socket.connect

